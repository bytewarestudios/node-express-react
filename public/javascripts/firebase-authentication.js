'use strict';

(function() {

  // Initializes FirebaseUserAccount.
  function FirebaseUserAccount() {
    this.initFirebase();
  }

  //todo: move this to its own file
  FirebaseUserAccount.prototype.initFirebase = function () {
    /* Initialize Firebase
     Generated by firebase, this can be retrieved by visiting
     https://console.firebase.google.com/project/{projectId}/settings/general/
     and clicking on "Add Firebase to your web app".
     */
    var config = {
      apiKey: "AIzaSyAH_6mpwyAYEV_0wd5MkBpvMPLma4G2NBo",
      authDomain: "user-accounts-93379.firebaseapp.com",
      databaseURL: "https://user-accounts-93379.firebaseio.com",
      projectId: "user-accounts-93379",
      storageBucket: "",
      messagingSenderId: "185192396136"
    };
    firebase.initializeApp(config);
  };
  /**
   * Sign in using email
   *
   * @param email
   * @param password
   */
  FirebaseUserAccount.prototype.signIn = function (email, password) {

    // todo: pull in from a config file
    var AUTH_PERSISTENCE = {
      SESSION: firebase.auth.Auth.Persistence.SESSION,
      LOCAL: firebase.auth.Auth.Persistence.LOCAL
    }

    // Sign in using email as user name and their password
    firebase.auth().setPersistence(AUTH_PERSISTENCE.SESSION)
    .then(function (user) {
      return firebase.auth().signInWithEmailAndPassword(email, password);
    })
    .catch(function(error) {
      // do something on error here
      var errorCode = error.code;
      var errorMessage = error.message;
    })
    .then(function(data) {
      console.log(data);
      if (firebaseUserAccount.checkSignedIn()) {
        console.log('ok to show the users account');
      }
      else{
        console.log('not ok to show the users account');
      }
    })
    .catch(function(error) {
      // do something on error here
      var errorCode = error.code;
      var errorMessage = error.message;
    });
  };

  /**
   * Sign out of Firebase.
   */
  FirebaseUserAccount.prototype.signOut = function () {
    firebase.auth().signOut();
  };

  /**
   * Triggers when the auth state change for instance when the user
   * signs-in or signs-out.
   *
   * @param user
   */
  FirebaseUserAccount.prototype.onAuthStateChanged = function (user) {
    if (user) { // User is signed in!
    } else { // User is signed out!
    }
  };

  /**
   * Returns true if user is signed-in. Otherwise false and displays a message.
   *
   * @returns {boolean}
   */
  FirebaseUserAccount.prototype.checkSignedIn = function () {
    console.log('method called!');
    return firebase.auth().currentUser
      ? true
      : false;
  };

  // register event listener if login component exists
  if (document.querySelector('[data-login-in-button]')) {
    document.querySelector('[data-login-in-button]')
    .addEventListener('click', function (event) {
      var userName = document.querySelector('#user_name').value;
      var password = document.querySelector('#password').value;
      firebaseUserAccount.signIn(userName, password);
    });
  }

  var firebaseUserAccount = new FirebaseUserAccount();

})();
